apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion buildConfig.compileSdk
    defaultConfig {
        applicationId "com.hellmund.primetime"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode 300
        versionName "3.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    androidExtensions {
        experimental = true
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/*.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libraries.kotlin

    // Modules
    implementation project(':api')
    implementation project(':core')
    implementation project(':common:data')
    implementation project(':common:ui')
    implementation project(':feature:about')
    implementation project(':feature:history')
    implementation project(':feature:onboarding')
    implementation project(':feature:movie-details')
    implementation project(':feature:recommendations')
    implementation project(':feature:search')
    implementation project(':feature:settings')
    implementation project(':feature:watchlist')

    // AndroidX
    implementation libraries.palette
    implementation libraries.viewPager

    // Dagger
    implementation libraries.dagger
    kapt libraries.daggerProcessor

    implementation libraries.bottomNavigator
    implementation libraries.preference

    // WorkManager
    implementation libraries.workManager
    implementation libraries.workManagerKtx

    // Testing
    testImplementation libraries.jUnit
    testImplementation libraries.mockitoCore
    testImplementation libraries.mockitoInline
}
