apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "com.hellmund.primetime"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode 300
        versionName "3.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libraries.kotlin

    // Modules
    implementation project(':about')
    implementation project(':api')
    implementation project(':core')
    implementation project(':data-common')
    implementation project(':history')
    implementation project(':onboarding')
    implementation project(':movie-details')
    implementation project(':recommendations')
    implementation project(':search')
    implementation project(':settings')
    implementation project(':ui-common')
    implementation project(':watchlist')

    // AndroidX
    implementation libraries.palette
    implementation libraries.viewPager

    // WorkManager
    implementation libraries.workManager
    implementation libraries.workManagerKtx

    // Dagger
    implementation libraries.daggerAndroid
    implementation libraries.daggerAndroidSupport
    kapt libraries.daggerAndroidProcessor
    kapt libraries.daggerProcessor

    kapt libraries.roomProcessor

    implementation libraries.timber

    // Testing
    testImplementation libraries.jUnit
    testImplementation libraries.mockitoCore
    testImplementation libraries.mockitoInline
}
