object BuildConfigVersions {
    const val minSdk = 21
    const val targetSdk = 29
    const val compileSdk = 29
}

object Versions {
    const val adapterDelegates = "4.2.0"
    const val appCompat = "1.1.0"
    const val bottomNavigator = "1.6"
    const val browser = "1.2.0"
    const val constraintLayout = "2.0.0-beta4"
    const val coreKtx = "1.2.0"
    const val coroutines = "1.3.6"
    const val fragmentKtx = "1.2.2"
    const val dagger = "2.26"
    const val gradleVersionsPlugin = "0.28.0"
    const val insetter = "0.2.1"
    const val jUnit = "4.13"
    const val kotlin = "1.3.61"
    const val ktlint = "9.2.1"
    const val ktor = "1.3.1"
    const val lifecycle = "2.2.0"
    const val lifecycleCommon = "2.2.0"
    const val material = "1.2.0-alpha05"
    const val mockitoCore = "3.3.1"
    const val mockitoInline = "3.3.1"
    const val okHttp = "4.4.0"
    const val palette = "1.0.0"
    const val picasso = "2.71828"
    const val preference = "1.1.0"
    const val roundedImageView = "2.3.0"
    const val sqlDelight = "1.2.2"
    const val swipeRefreshLayout = "1.1.0-beta01"
    const val threeTenAbp = "1.2.2"
    const val timber = "4.7.1"
    const val viewPager = "1.0.0"
    const val viewPagerIndicator = "0.8.1"
    const val workManager = "2.3.2"
}

object Libraries {
    const val adapterDelegates = "com.hannesdorfmann:adapterdelegates4:${Versions.adapterDelegates}"
    const val adapterDelegatesDsl = "com.hannesdorfmann:adapterdelegates4-kotlin-dsl:${Versions.adapterDelegates}"
    const val adapterDelegatesLayoutContainer = "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-layoutcontainer:${Versions.adapterDelegates}"
    const val appCompat = "androidx.appcompat:appcompat:${Versions.appCompat}"
    const val bottomNavigator = "com.pandora.bottomnavigator:bottom-navigator:${Versions.bottomNavigator}"
    const val browser = "androidx.browser:browser:${Versions.browser}"
    const val constraintLayout = "androidx.constraintlayout:constraintlayout:${Versions.constraintLayout}"
    const val coreKtx = "androidx.core:core-ktx:${Versions.coreKtx}"
    const val fragmentKtx = "androidx.fragment:fragment-ktx:${Versions.fragmentKtx}"
    const val coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutines}"
    const val coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.coroutines}"
    const val dagger = "com.google.dagger:dagger:${Versions.dagger}"
    const val daggerProcessor = "com.google.dagger:dagger-compiler:${Versions.dagger}"
    const val insetter = "dev.chrisbanes:insetter:${Versions.insetter}"
    const val insetterKtx = "dev.chrisbanes:insetter-ktx:${Versions.insetter}"
    const val jUnit = "junit:junit:${Versions.jUnit}"
    const val kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    const val ktorCore = "io.ktor:ktor-client-core:${Versions.ktor}"
    const val ktorGson = "io.ktor:ktor-client-gson:${Versions.ktor}"
    const val ktorOkHttp = "io.ktor:ktor-client-okhttp:${Versions.ktor}"
    const val lifecycleViewModel = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.lifecycle}"
    const val lifecycleLiveData = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.lifecycle}"
    const val lifecycleKtx = "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.lifecycle}"
    const val lifecycleExtensions = "androidx.lifecycle:lifecycle-extensions:${Versions.lifecycle}"
    const val lifecycleCommon = "androidx.lifecycle:lifecycle-common-java8:${Versions.lifecycleCommon}"
    const val material = "com.google.android.material:material:${Versions.material}"
    const val mockitoCore = "org.mockito:mockito-core:${Versions.mockitoCore}"
    const val mockitoInline = "org.mockito:mockito-inline:${Versions.mockitoInline}"
    const val okHttpLogging = "com.squareup.okhttp3:logging-interceptor:${Versions.okHttp}"
    const val palette = "androidx.palette:palette:${Versions.palette}"
    const val picasso = "com.squareup.picasso:picasso:${Versions.picasso}"
    const val preference = "androidx.preference:preference:${Versions.preference}"
    const val roundedImageView = "com.makeramen:roundedimageview:${Versions.roundedImageView}"
    const val sqlDelightCoroutines = "com.squareup.sqldelight:coroutines-extensions-jvm:${Versions.sqlDelight}"
    const val sqlDelightRuntime = "com.squareup.sqldelight:runtime:${Versions.sqlDelight}"
    const val sqlDelightDriver = "com.squareup.sqldelight:android-driver:${Versions.sqlDelight}"
    const val swipeRefreshLayout = "androidx.swiperefreshlayout:swiperefreshlayout:${Versions.swipeRefreshLayout}"
    const val threeTenAbp = "com.jakewharton.threetenabp:threetenabp:${Versions.threeTenAbp}"
    const val timber = "com.jakewharton.timber:timber:${Versions.timber}"
    const val viewPager = "androidx.viewpager2:viewpager2:${Versions.viewPager}"
    const val viewPagerIndicator = "com.github.thellmund:ViewPagerTwoIndicator:${Versions.viewPagerIndicator}"
    const val workManager = "androidx.work:work-runtime:${Versions.workManager}"
    const val workManagerKtx = "androidx.work:work-runtime-ktx:${Versions.workManager}"
}
